{"ast":null,"code":"var _jsxFileName = \"/Users/kun/Desktop/CrossKimpArbitrage/v0.6/monitoring-frontend/src/components/settings/SettingsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Tabs, Tab, Box, Paper, makeStyles } from '@material-ui/core';\nimport TradingSettings from './TradingSettings';\nimport ExchangeAPISettings from './ExchangeSettings';\nimport MonitoringSettings from './MonitoringSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(3)\n  },\n  tabs: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    marginBottom: theme.spacing(3)\n  }\n}));\nfunction TabPanel({\n  children,\n  value,\n  index\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    role: \"tabpanel\",\n    hidden: value !== index,\n    id: `settings-tabpanel-${index}`,\n    \"aria-labelledby\": `settings-tab-${index}`,\n    children: value === index && /*#__PURE__*/_jsxDEV(Box, {\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 27\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n_c = TabPanel;\nfunction SettingsPage() {\n  _s();\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = useState(0);\n  const [settings, setSettings] = useState(null);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    fetchSettings();\n  }, []);\n  const fetchSettings = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/settings');\n      const data = await response.json();\n      setSettings(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch settings:', error);\n      setLoading(false);\n    }\n  };\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n  const handleSettingsUpdate = async updatedSettings => {\n    try {\n      const response = await fetch('http://localhost:8000/api/settings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(updatedSettings)\n      });\n      if (response.ok) {\n        setSettings(updatedSettings);\n        alert('Settings saved successfully');\n      } else {\n        throw new Error('Failed to save settings');\n      }\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      alert('Failed to save settings');\n    }\n  };\n  if (loading || !settings) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading settings...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      children: [/*#__PURE__*/_jsxDEV(Tabs, {\n        value: activeTab,\n        onChange: handleTabChange,\n        indicatorColor: \"primary\",\n        textColor: \"primary\",\n        className: classes.tabs,\n        children: [/*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Trading Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Exchange API Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tab, {\n          label: \"Monitoring Settings\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: activeTab,\n        index: 0,\n        children: /*#__PURE__*/_jsxDEV(TradingSettings, {\n          settings: settings,\n          onSave: handleSettingsUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: activeTab,\n        index: 1,\n        children: /*#__PURE__*/_jsxDEV(ExchangeAPISettings, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TabPanel, {\n        value: activeTab,\n        index: 2,\n        children: /*#__PURE__*/_jsxDEV(MonitoringSettings, {\n          settings: settings,\n          onSave: handleSettingsUpdate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(SettingsPage, \"U6kUV+F2Dmd+2HdTfAvMxRXPJJw=\", false, function () {\n  return [useStyles];\n});\n_c2 = SettingsPage;\nexport default SettingsPage;\nvar _c, _c2;\n$RefreshReg$(_c, \"TabPanel\");\n$RefreshReg$(_c2, \"SettingsPage\");","map":{"version":3,"names":["React","useState","useEffect","Tabs","Tab","Box","Paper","makeStyles","TradingSettings","ExchangeAPISettings","MonitoringSettings","jsxDEV","_jsxDEV","useStyles","theme","root","flexGrow","backgroundColor","palette","background","paper","padding","spacing","tabs","borderBottom","divider","marginBottom","TabPanel","children","value","index","role","hidden","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","SettingsPage","_s","classes","activeTab","setActiveTab","settings","setSettings","loading","setLoading","fetchSettings","response","fetch","data","json","error","console","handleTabChange","event","newValue","handleSettingsUpdate","updatedSettings","method","headers","body","JSON","stringify","ok","alert","Error","className","onChange","indicatorColor","textColor","label","onSave","_c2","$RefreshReg$"],"sources":["/Users/kun/Desktop/CrossKimpArbitrage/v0.6/monitoring-frontend/src/components/settings/SettingsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  Tabs,\n  Tab,\n  Box,\n  Paper,\n  makeStyles\n} from '@material-ui/core';\nimport TradingSettings from './TradingSettings';\nimport ExchangeAPISettings from './ExchangeSettings';\nimport MonitoringSettings from './MonitoringSettings';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n    padding: theme.spacing(3),\n  },\n  tabs: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    marginBottom: theme.spacing(3),\n  }\n}));\n\nfunction TabPanel({ children, value, index }) {\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`settings-tabpanel-${index}`}\n      aria-labelledby={`settings-tab-${index}`}\n    >\n      {value === index && <Box>{children}</Box>}\n    </div>\n  );\n}\n\nfunction SettingsPage() {\n  const classes = useStyles();\n  const [activeTab, setActiveTab] = useState(0);\n  const [settings, setSettings] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchSettings();\n  }, []);\n\n  const fetchSettings = async () => {\n    try {\n      const response = await fetch('http://localhost:8000/api/settings');\n      const data = await response.json();\n      setSettings(data);\n      setLoading(false);\n    } catch (error) {\n      console.error('Failed to fetch settings:', error);\n      setLoading(false);\n    }\n  };\n\n  const handleTabChange = (event, newValue) => {\n    setActiveTab(newValue);\n  };\n\n  const handleSettingsUpdate = async (updatedSettings) => {\n    try {\n      const response = await fetch('http://localhost:8000/api/settings', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(updatedSettings),\n      });\n\n      if (response.ok) {\n        setSettings(updatedSettings);\n        alert('Settings saved successfully');\n      } else {\n        throw new Error('Failed to save settings');\n      }\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      alert('Failed to save settings');\n    }\n  };\n\n  if (loading || !settings) {\n    return <div>Loading settings...</div>;\n  }\n\n  return (\n    <div className={classes.root}>\n      <Paper>\n        <Tabs\n          value={activeTab}\n          onChange={handleTabChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          className={classes.tabs}\n        >\n          <Tab label=\"Trading Settings\" />\n          <Tab label=\"Exchange API Settings\" />\n          <Tab label=\"Monitoring Settings\" />\n        </Tabs>\n\n        <TabPanel value={activeTab} index={0}>\n          <TradingSettings\n            settings={settings}\n            onSave={handleSettingsUpdate}\n          />\n        </TabPanel>\n\n        <TabPanel value={activeTab} index={1}>\n          <ExchangeAPISettings />\n        </TabPanel>\n\n        <TabPanel value={activeTab} index={2}>\n          <MonitoringSettings\n            settings={settings}\n            onSave={handleSettingsUpdate}\n          />\n        </TabPanel>\n      </Paper>\n    </div>\n  );\n}\n\nexport default SettingsPage; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}